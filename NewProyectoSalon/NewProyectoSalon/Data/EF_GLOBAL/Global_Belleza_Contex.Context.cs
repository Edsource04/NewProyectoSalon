//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data.EF_GLOBAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GLOBAL_BELLEZAEntities : DbContext
    {
        public GLOBAL_BELLEZAEntities()
            : base("name=GLOBAL_BELLEZAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<articulo> articulo { get; set; }
        public virtual DbSet<categoria> categoria { get; set; }
        public virtual DbSet<Ciudad> Ciudad { get; set; }
        public virtual DbSet<cliente> cliente { get; set; }
        public virtual DbSet<cotizacion> cotizacion { get; set; }
        public virtual DbSet<cuentas_x_pagar> cuentas_x_pagar { get; set; }
        public virtual DbSet<detalle_cotizacion_productos> detalle_cotizacion_productos { get; set; }
        public virtual DbSet<detalle_ingreso> detalle_ingreso { get; set; }
        public virtual DbSet<detalle_venta> detalle_venta { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<ingreso> ingreso { get; set; }
        public virtual DbSet<MovimientosPagosYcobranzas> MovimientosPagosYcobranzas { get; set; }
        public virtual DbSet<Ncf_Comprovante> Ncf_Comprovante { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<proveedor> proveedor { get; set; }
        public virtual DbSet<ROLES> ROLES { get; set; }
        public virtual DbSet<trabajador> trabajador { get; set; }
        public virtual DbSet<USERS> USERS { get; set; }
        public virtual DbSet<UsuarioTrabajador> UsuarioTrabajador { get; set; }
        public virtual DbSet<venta> venta { get; set; }
        public virtual DbSet<cuentas_x_cobrar> cuentas_x_cobrar { get; set; }
        public virtual DbSet<get_client_parameter> get_client_parameter { get; set; }
        public virtual DbSet<ROL_USER> ROL_USER { get; set; }
        public virtual DbSet<VW_CLIENTES_LOAD> VW_CLIENTES_LOAD { get; set; }
        public virtual DbSet<VW_COTIZACIONES> VW_COTIZACIONES { get; set; }
        public virtual DbSet<wv_get_cliente_deuda> wv_get_cliente_deuda { get; set; }
        public virtual DbSet<wv_get_employees> wv_get_employees { get; set; }
        public virtual DbSet<wv_usuario_trabajador> wv_usuario_trabajador { get; set; }
    
        public virtual ObjectResult<FACTURA_A_IMPRIMIR_Result> FACTURA_A_IMPRIMIR(Nullable<int> id_factura)
        {
            var id_facturaParameter = id_factura.HasValue ?
                new ObjectParameter("id_factura", id_factura) :
                new ObjectParameter("id_factura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FACTURA_A_IMPRIMIR_Result>("FACTURA_A_IMPRIMIR", id_facturaParameter);
        }
    
        public virtual ObjectResult<FILL_DROP_DOWN_Result> FILL_DROP_DOWN(string valor, Nullable<int> id)
        {
            var valorParameter = valor != null ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FILL_DROP_DOWN_Result>("FILL_DROP_DOWN", valorParameter, idParameter);
        }
    
        public virtual ObjectResult<FILL_DROP_DOWN_not_Result> FILL_DROP_DOWN_not(string dropDownName)
        {
            var dropDownNameParameter = dropDownName != null ?
                new ObjectParameter("DropDownName", dropDownName) :
                new ObjectParameter("DropDownName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FILL_DROP_DOWN_not_Result>("FILL_DROP_DOWN_not", dropDownNameParameter);
        }
    
        public virtual ObjectResult<GET_EMPLEADO_COMBO_Result> GET_EMPLEADO_COMBO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_EMPLEADO_COMBO_Result>("GET_EMPLEADO_COMBO");
        }
    
        public virtual ObjectResult<IMPRIMIR_COTIZACION_Result> IMPRIMIR_COTIZACION(Nullable<int> id_cotizacion)
        {
            var id_cotizacionParameter = id_cotizacion.HasValue ?
                new ObjectParameter("id_cotizacion", id_cotizacion) :
                new ObjectParameter("id_cotizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IMPRIMIR_COTIZACION_Result>("IMPRIMIR_COTIZACION", id_cotizacionParameter);
        }
    
        public virtual int INGRESAR_FACTURA(string nombre_trabajador, string tipo_pago, string medio_pago, Nullable<int> id_venta, Nullable<int> id_trabajador, Nullable<int> id_cliente, Nullable<int> cantidad_articulos, Nullable<decimal> subtotal, Nullable<decimal> itbis, Nullable<decimal> total)
        {
            var nombre_trabajadorParameter = nombre_trabajador != null ?
                new ObjectParameter("nombre_trabajador", nombre_trabajador) :
                new ObjectParameter("nombre_trabajador", typeof(string));
    
            var tipo_pagoParameter = tipo_pago != null ?
                new ObjectParameter("tipo_pago", tipo_pago) :
                new ObjectParameter("tipo_pago", typeof(string));
    
            var medio_pagoParameter = medio_pago != null ?
                new ObjectParameter("medio_pago", medio_pago) :
                new ObjectParameter("medio_pago", typeof(string));
    
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            var id_trabajadorParameter = id_trabajador.HasValue ?
                new ObjectParameter("id_trabajador", id_trabajador) :
                new ObjectParameter("id_trabajador", typeof(int));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var cantidad_articulosParameter = cantidad_articulos.HasValue ?
                new ObjectParameter("cantidad_articulos", cantidad_articulos) :
                new ObjectParameter("cantidad_articulos", typeof(int));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(decimal));
    
            var itbisParameter = itbis.HasValue ?
                new ObjectParameter("itbis", itbis) :
                new ObjectParameter("itbis", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INGRESAR_FACTURA", nombre_trabajadorParameter, tipo_pagoParameter, medio_pagoParameter, id_ventaParameter, id_trabajadorParameter, id_clienteParameter, cantidad_articulosParameter, subtotalParameter, itbisParameter, totalParameter);
        }
    
        public virtual int INSERTAR_COTIZACION(Nullable<int> idcliente, Nullable<int> idtrabajador, Nullable<int> cantidad, Nullable<decimal> subtotal, Nullable<decimal> itbis, Nullable<decimal> total, ObjectParameter id_cotizacion)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var idtrabajadorParameter = idtrabajador.HasValue ?
                new ObjectParameter("idtrabajador", idtrabajador) :
                new ObjectParameter("idtrabajador", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(decimal));
    
            var itbisParameter = itbis.HasValue ?
                new ObjectParameter("itbis", itbis) :
                new ObjectParameter("itbis", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTAR_COTIZACION", idclienteParameter, idtrabajadorParameter, cantidadParameter, subtotalParameter, itbisParameter, totalParameter, id_cotizacion);
        }
    
        public virtual int INSERTAR_DETALLES_COTIZADOR_PRODUCTOS(Nullable<int> idcotizacion, string producto, Nullable<int> cantidad, Nullable<decimal> precioVenta, Nullable<decimal> itbis, Nullable<decimal> subtotal, Nullable<decimal> total)
        {
            var idcotizacionParameter = idcotizacion.HasValue ?
                new ObjectParameter("idcotizacion", idcotizacion) :
                new ObjectParameter("idcotizacion", typeof(int));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var precioVentaParameter = precioVenta.HasValue ?
                new ObjectParameter("precioVenta", precioVenta) :
                new ObjectParameter("precioVenta", typeof(decimal));
    
            var itbisParameter = itbis.HasValue ?
                new ObjectParameter("itbis", itbis) :
                new ObjectParameter("itbis", typeof(decimal));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTAR_DETALLES_COTIZADOR_PRODUCTOS", idcotizacionParameter, productoParameter, cantidadParameter, precioVentaParameter, itbisParameter, subtotalParameter, totalParameter);
        }
    
        public virtual int LIST_ARTICULOS_X_CODIGO(string cODIGO, Nullable<int> cOPIAS)
        {
            var cODIGOParameter = cODIGO != null ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(string));
    
            var cOPIASParameter = cOPIAS.HasValue ?
                new ObjectParameter("COPIAS", cOPIAS) :
                new ObjectParameter("COPIAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LIST_ARTICULOS_X_CODIGO", cODIGOParameter, cOPIASParameter);
        }
    
        public virtual ObjectResult<ListaProveedores_Result> ListaProveedores(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaProveedores_Result>("ListaProveedores", idParameter);
        }
    
        public virtual int REDUCIR_CANTIDAD_ARTICULO(Nullable<int> idarticulo, Nullable<int> cantidad)
        {
            var idarticuloParameter = idarticulo.HasValue ?
                new ObjectParameter("idarticulo", idarticulo) :
                new ObjectParameter("idarticulo", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REDUCIR_CANTIDAD_ARTICULO", idarticuloParameter, cantidadParameter);
        }
    
        public virtual int REGISTRAR_USUARIO(Nullable<int> id, string usuario, string clave, Nullable<int> rolID, Nullable<bool> statud, Nullable<int> id_trabajador)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("RolID", rolID) :
                new ObjectParameter("RolID", typeof(int));
    
            var statudParameter = statud.HasValue ?
                new ObjectParameter("Statud", statud) :
                new ObjectParameter("Statud", typeof(bool));
    
            var id_trabajadorParameter = id_trabajador.HasValue ?
                new ObjectParameter("id_trabajador", id_trabajador) :
                new ObjectParameter("id_trabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REGISTRAR_USUARIO", idParameter, usuarioParameter, claveParameter, rolIDParameter, statudParameter, id_trabajadorParameter);
        }
    
        public virtual int REGISTRAR_USUARIO_20180807(Nullable<int> id, string usuario, string clave, Nullable<int> rolID, Nullable<bool> statud, Nullable<int> id_trabajador)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("RolID", rolID) :
                new ObjectParameter("RolID", typeof(int));
    
            var statudParameter = statud.HasValue ?
                new ObjectParameter("Statud", statud) :
                new ObjectParameter("Statud", typeof(bool));
    
            var id_trabajadorParameter = id_trabajador.HasValue ?
                new ObjectParameter("id_trabajador", id_trabajador) :
                new ObjectParameter("id_trabajador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REGISTRAR_USUARIO_20180807", idParameter, usuarioParameter, claveParameter, rolIDParameter, statudParameter, id_trabajadorParameter);
        }
    
        public virtual ObjectResult<SELECT_EMPLOYEE_BY_ID_Result> SELECT_EMPLOYEE_BY_ID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_EMPLOYEE_BY_ID_Result>("SELECT_EMPLOYEE_BY_ID", iDParameter);
        }
    
        public virtual ObjectResult<SP_BUSCAR_FACTURA_X_ID_Result> SP_BUSCAR_FACTURA_X_ID(Nullable<int> id_factura, Nullable<int> id_venta)
        {
            var id_facturaParameter = id_factura.HasValue ?
                new ObjectParameter("id_factura", id_factura) :
                new ObjectParameter("id_factura", typeof(int));
    
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BUSCAR_FACTURA_X_ID_Result>("SP_BUSCAR_FACTURA_X_ID", id_facturaParameter, id_ventaParameter);
        }
    
        public virtual int SP_CREAR_CUENTA_X_COBRAR(Nullable<int> id_cliente, Nullable<decimal> valor, string usuario, Nullable<int> id_venta)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREAR_CUENTA_X_COBRAR", id_clienteParameter, valorParameter, usuarioParameter, id_ventaParameter);
        }
    
        public virtual int SP_CUENTA_POR_COBRAR(Nullable<int> id, Nullable<int> id_cliente, Nullable<decimal> valor, Nullable<decimal> pagado, string usuario, string idFactura, Nullable<bool> estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var pagadoParameter = pagado.HasValue ?
                new ObjectParameter("pagado", pagado) :
                new ObjectParameter("pagado", typeof(decimal));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var idFacturaParameter = idFactura != null ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CUENTA_POR_COBRAR", idParameter, id_clienteParameter, valorParameter, pagadoParameter, usuarioParameter, idFacturaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SP_GET_ARTICULO_Result> SP_GET_ARTICULO(string codigo, string nom)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ARTICULO_Result>("SP_GET_ARTICULO", codigoParameter, nomParameter);
        }
    
        public virtual ObjectResult<SP_GET_ARTICULO_LOAD_Result> SP_GET_ARTICULO_LOAD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ARTICULO_LOAD_Result>("SP_GET_ARTICULO_LOAD");
        }
    
        public virtual ObjectResult<SP_GET_ARTICULOS_BUSCAR_Result> SP_GET_ARTICULOS_BUSCAR(string codigo, string nombre)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ARTICULOS_BUSCAR_Result>("SP_GET_ARTICULOS_BUSCAR", codigoParameter, nombreParameter);
        }
    
        public virtual ObjectResult<SP_GET_ARTICULOS_BUSCAR_X_CODIGO_Result> SP_GET_ARTICULOS_BUSCAR_X_CODIGO(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ARTICULOS_BUSCAR_X_CODIGO_Result>("SP_GET_ARTICULOS_BUSCAR_X_CODIGO", codigoParameter);
        }
    
        public virtual ObjectResult<SP_GET_BUSCAR_PROVEEDOR_Result> SP_GET_BUSCAR_PROVEEDOR(string documento, string telefono, string nombre)
        {
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_BUSCAR_PROVEEDOR_Result>("SP_GET_BUSCAR_PROVEEDOR", documentoParameter, telefonoParameter, nombreParameter);
        }
    
        public virtual ObjectResult<SP_GET_CATEGORIA_BUSCAR_Result> SP_GET_CATEGORIA_BUSCAR(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CATEGORIA_BUSCAR_Result>("SP_GET_CATEGORIA_BUSCAR", nombreParameter);
        }
    
        public virtual ObjectResult<SP_GET_Categoria_LOAD_Result> SP_GET_Categoria_LOAD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_Categoria_LOAD_Result>("SP_GET_Categoria_LOAD");
        }
    
        public virtual ObjectResult<SP_GET_CLIENTE_CXC_Result> SP_GET_CLIENTE_CXC(string numC, string codiC, string nomCom)
        {
            var numCParameter = numC != null ?
                new ObjectParameter("NumC", numC) :
                new ObjectParameter("NumC", typeof(string));
    
            var codiCParameter = codiC != null ?
                new ObjectParameter("CodiC", codiC) :
                new ObjectParameter("CodiC", typeof(string));
    
            var nomComParameter = nomCom != null ?
                new ObjectParameter("NomCom", nomCom) :
                new ObjectParameter("NomCom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CLIENTE_CXC_Result>("SP_GET_CLIENTE_CXC", numCParameter, codiCParameter, nomComParameter);
        }
    
        public virtual ObjectResult<SP_GET_CLIENTE_DEUDA_Result> SP_GET_CLIENTE_DEUDA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CLIENTE_DEUDA_Result>("SP_GET_CLIENTE_DEUDA");
        }
    
        public virtual ObjectResult<SP_GET_CLIENTES_BUSCAR_Result> SP_GET_CLIENTES_BUSCAR(string codigoCliente, string identificacion, string nombre_Completo, string telefono)
        {
            var codigoClienteParameter = codigoCliente != null ?
                new ObjectParameter("CodigoCliente", codigoCliente) :
                new ObjectParameter("CodigoCliente", typeof(string));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombre_CompletoParameter = nombre_Completo != null ?
                new ObjectParameter("Nombre_Completo", nombre_Completo) :
                new ObjectParameter("Nombre_Completo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CLIENTES_BUSCAR_Result>("SP_GET_CLIENTES_BUSCAR", codigoClienteParameter, identificacionParameter, nombre_CompletoParameter, telefonoParameter);
        }
    
        public virtual ObjectResult<sp_get_clientes_deudores_Result> sp_get_clientes_deudores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_clientes_deudores_Result>("sp_get_clientes_deudores");
        }
    
        public virtual ObjectResult<SP_GET_CLIENTES_LOAD_Result> SP_GET_CLIENTES_LOAD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CLIENTES_LOAD_Result>("SP_GET_CLIENTES_LOAD");
        }
    
        public virtual ObjectResult<SP_GET_COMBOBOX_CATEGORIA_Result> SP_GET_COMBOBOX_CATEGORIA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_COMBOBOX_CATEGORIA_Result>("SP_GET_COMBOBOX_CATEGORIA");
        }
    
        public virtual ObjectResult<SP_GET_COMBOBOX_CLIENTE_Result> SP_GET_COMBOBOX_CLIENTE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_COMBOBOX_CLIENTE_Result>("SP_GET_COMBOBOX_CLIENTE");
        }
    
        public virtual ObjectResult<SP_GET_COMBOBOX_PROVEEDOR_Result> SP_GET_COMBOBOX_PROVEEDOR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_COMBOBOX_PROVEEDOR_Result>("SP_GET_COMBOBOX_PROVEEDOR");
        }
    
        public virtual ObjectResult<SP_GET_DROPDOWN_DERMOGRAFIA_Result> SP_GET_DROPDOWN_DERMOGRAFIA(string valor, Nullable<int> id)
        {
            var valorParameter = valor != null ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_DROPDOWN_DERMOGRAFIA_Result>("SP_GET_DROPDOWN_DERMOGRAFIA", valorParameter, idParameter);
        }
    
        public virtual ObjectResult<SP_GET_EMPLOYEES_Result> SP_GET_EMPLOYEES(string nombreC, string num_cedula, string telefono)
        {
            var nombreCParameter = nombreC != null ?
                new ObjectParameter("NombreC", nombreC) :
                new ObjectParameter("NombreC", typeof(string));
    
            var num_cedulaParameter = num_cedula != null ?
                new ObjectParameter("num_cedula", num_cedula) :
                new ObjectParameter("num_cedula", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EMPLOYEES_Result>("SP_GET_EMPLOYEES", nombreCParameter, num_cedulaParameter, telefonoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_FACTURA(Nullable<int> id_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_FACTURA", id_ventaParameter);
        }
    
        public virtual ObjectResult<SP_GET_PROVEEDOR_BUSCAR_Result> SP_GET_PROVEEDOR_BUSCAR(string documento, string telefono, string nombre)
        {
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PROVEEDOR_BUSCAR_Result>("SP_GET_PROVEEDOR_BUSCAR", documentoParameter, telefonoParameter, nombreParameter);
        }
    
        public virtual ObjectResult<SP_GET_PROVEEDOR_LOAD_Result> SP_GET_PROVEEDOR_LOAD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PROVEEDOR_LOAD_Result>("SP_GET_PROVEEDOR_LOAD");
        }
    
        public virtual ObjectResult<SP_GET_ROLL_DROP_Result> SP_GET_ROLL_DROP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ROLL_DROP_Result>("SP_GET_ROLL_DROP");
        }
    
        public virtual ObjectResult<sp_get_searche_client_pagos_Result> sp_get_searche_client_pagos(string num_documento, string codigoCliente, string nombComp)
        {
            var num_documentoParameter = num_documento != null ?
                new ObjectParameter("num_documento", num_documento) :
                new ObjectParameter("num_documento", typeof(string));
    
            var codigoClienteParameter = codigoCliente != null ?
                new ObjectParameter("codigoCliente", codigoCliente) :
                new ObjectParameter("codigoCliente", typeof(string));
    
            var nombCompParameter = nombComp != null ?
                new ObjectParameter("NombComp", nombComp) :
                new ObjectParameter("NombComp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_searche_client_pagos_Result>("sp_get_searche_client_pagos", num_documentoParameter, codigoClienteParameter, nombCompParameter);
        }
    
        public virtual ObjectResult<SP_GET_USER_BY_NAME_Result> SP_GET_USER_BY_NAME(string uSERNAME)
        {
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_USER_BY_NAME_Result>("SP_GET_USER_BY_NAME", uSERNAMEParameter);
        }
    
        public virtual ObjectResult<SP_GET_VENTAS_DEL_DIA_Result> SP_GET_VENTAS_DEL_DIA(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_VENTAS_DEL_DIA_Result>("SP_GET_VENTAS_DEL_DIA", fechaParameter);
        }
    
        public virtual ObjectResult<SP_GET_VENTAS_DEL_MES_Result> SP_GET_VENTAS_DEL_MES(Nullable<System.DateTime> fROM, Nullable<System.DateTime> tipo_de_Documento)
        {
            var fROMParameter = fROM.HasValue ?
                new ObjectParameter("FROM", fROM) :
                new ObjectParameter("FROM", typeof(System.DateTime));
    
            var tipo_de_DocumentoParameter = tipo_de_Documento.HasValue ?
                new ObjectParameter("Tipo_de_Documento", tipo_de_Documento) :
                new ObjectParameter("Tipo_de_Documento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_VENTAS_DEL_MES_Result>("SP_GET_VENTAS_DEL_MES", fROMParameter, tipo_de_DocumentoParameter);
        }
    
        public virtual int SP_INGRESAR_DETALLE_VENTA(Nullable<int> idventa, string producto, Nullable<int> cantidad, Nullable<decimal> precio_venta, Nullable<decimal> descuento, Nullable<decimal> itbis)
        {
            var idventaParameter = idventa.HasValue ?
                new ObjectParameter("idventa", idventa) :
                new ObjectParameter("idventa", typeof(int));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var precio_ventaParameter = precio_venta.HasValue ?
                new ObjectParameter("precio_venta", precio_venta) :
                new ObjectParameter("precio_venta", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(decimal));
    
            var itbisParameter = itbis.HasValue ?
                new ObjectParameter("itbis", itbis) :
                new ObjectParameter("itbis", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INGRESAR_DETALLE_VENTA", idventaParameter, productoParameter, cantidadParameter, precio_ventaParameter, descuentoParameter, itbisParameter);
        }
    
        public virtual int SP_INGRESAR_VENTA(Nullable<int> idtrabajador, Nullable<int> id_cliente, string tipo_comprobante, string tipo_venta, string tipo_cliente, Nullable<decimal> itbis, Nullable<decimal> subtotal, Nullable<decimal> total, ObjectParameter ventaid)
        {
            var idtrabajadorParameter = idtrabajador.HasValue ?
                new ObjectParameter("idtrabajador", idtrabajador) :
                new ObjectParameter("idtrabajador", typeof(int));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var tipo_comprobanteParameter = tipo_comprobante != null ?
                new ObjectParameter("tipo_comprobante", tipo_comprobante) :
                new ObjectParameter("tipo_comprobante", typeof(string));
    
            var tipo_ventaParameter = tipo_venta != null ?
                new ObjectParameter("tipo_venta", tipo_venta) :
                new ObjectParameter("tipo_venta", typeof(string));
    
            var tipo_clienteParameter = tipo_cliente != null ?
                new ObjectParameter("tipo_cliente", tipo_cliente) :
                new ObjectParameter("tipo_cliente", typeof(string));
    
            var itbisParameter = itbis.HasValue ?
                new ObjectParameter("itbis", itbis) :
                new ObjectParameter("itbis", typeof(decimal));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INGRESAR_VENTA", idtrabajadorParameter, id_clienteParameter, tipo_comprobanteParameter, tipo_ventaParameter, tipo_clienteParameter, itbisParameter, subtotalParameter, totalParameter, ventaid);
        }
    
        public virtual int SP_LOGIN(string usuario, string contrasena, ObjectParameter nombreC, ObjectParameter rolid, ObjectParameter id_trabajador)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LOGIN", usuarioParameter, contrasenaParameter, nombreC, rolid, id_trabajador);
        }
    
        public virtual int SP_SET_CATEGORIA(Nullable<int> idCat, string nom, string desc)
        {
            var idCatParameter = idCat.HasValue ?
                new ObjectParameter("idCat", idCat) :
                new ObjectParameter("idCat", typeof(int));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_CATEGORIA", idCatParameter, nomParameter, descParameter);
        }
    
        public virtual int SP_SET_Categoria_UPDATE_INSERT(Nullable<int> idCategoria, string nomCategiria, string descripcion)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var nomCategiriaParameter = nomCategiria != null ?
                new ObjectParameter("NomCategiria", nomCategiria) :
                new ObjectParameter("NomCategiria", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_Categoria_UPDATE_INSERT", idCategoriaParameter, nomCategiriaParameter, descripcionParameter);
        }
    
        public virtual int SP_SET_CLIENTE_DELETE(Nullable<int> idcliente, string usuarioModifica)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var usuarioModificaParameter = usuarioModifica != null ?
                new ObjectParameter("UsuarioModifica", usuarioModifica) :
                new ObjectParameter("UsuarioModifica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_CLIENTE_DELETE", idclienteParameter, usuarioModificaParameter);
        }
    
        public virtual int SP_SET_CLIENTE_INSERT_UPDATE(Nullable<int> idcliente, string nombre, string apellidos, string sexo, Nullable<System.DateTime> fecha_nacimiento, string tipo_documento, string num_documento, string direccion, string telefono, string email, Nullable<bool> status, string usuarioAdiciona, string usuarioModifica)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento.HasValue ?
                new ObjectParameter("fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("fecha_nacimiento", typeof(System.DateTime));
    
            var tipo_documentoParameter = tipo_documento != null ?
                new ObjectParameter("tipo_documento", tipo_documento) :
                new ObjectParameter("tipo_documento", typeof(string));
    
            var num_documentoParameter = num_documento != null ?
                new ObjectParameter("num_documento", num_documento) :
                new ObjectParameter("num_documento", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var usuarioAdicionaParameter = usuarioAdiciona != null ?
                new ObjectParameter("UsuarioAdiciona", usuarioAdiciona) :
                new ObjectParameter("UsuarioAdiciona", typeof(string));
    
            var usuarioModificaParameter = usuarioModifica != null ?
                new ObjectParameter("UsuarioModifica", usuarioModifica) :
                new ObjectParameter("UsuarioModifica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_CLIENTE_INSERT_UPDATE", idclienteParameter, nombreParameter, apellidosParameter, sexoParameter, fecha_nacimientoParameter, tipo_documentoParameter, num_documentoParameter, direccionParameter, telefonoParameter, emailParameter, statusParameter, usuarioAdicionaParameter, usuarioModificaParameter);
        }
    
        public virtual int SP_SET_CLIENTE_INSERT_UPDATE_20180528(Nullable<int> idcliente, string nombre, string apellidos, string sexo, Nullable<System.DateTime> fecha_nacimiento, string tipo_documento, string num_documento, string direccion, string telefono, string email, Nullable<bool> status, Nullable<System.DateTime> fechaAdiciona, string usuarioAdiciona)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento.HasValue ?
                new ObjectParameter("fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("fecha_nacimiento", typeof(System.DateTime));
    
            var tipo_documentoParameter = tipo_documento != null ?
                new ObjectParameter("tipo_documento", tipo_documento) :
                new ObjectParameter("tipo_documento", typeof(string));
    
            var num_documentoParameter = num_documento != null ?
                new ObjectParameter("num_documento", num_documento) :
                new ObjectParameter("num_documento", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var fechaAdicionaParameter = fechaAdiciona.HasValue ?
                new ObjectParameter("FechaAdiciona", fechaAdiciona) :
                new ObjectParameter("FechaAdiciona", typeof(System.DateTime));
    
            var usuarioAdicionaParameter = usuarioAdiciona != null ?
                new ObjectParameter("UsuarioAdiciona", usuarioAdiciona) :
                new ObjectParameter("UsuarioAdiciona", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_CLIENTE_INSERT_UPDATE_20180528", idclienteParameter, nombreParameter, apellidosParameter, sexoParameter, fecha_nacimientoParameter, tipo_documentoParameter, num_documentoParameter, direccionParameter, telefonoParameter, emailParameter, statusParameter, fechaAdicionaParameter, usuarioAdicionaParameter);
        }
    
        public virtual int SP_SET_DELETE_ARTICULO(Nullable<int> codigo, Nullable<bool> estado)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_DELETE_ARTICULO", codigoParameter, estadoParameter);
        }
    
        public virtual int SP_SET_DELETE_PROVEEDOR(Nullable<int> codigo, Nullable<bool> estado)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_DELETE_PROVEEDOR", codigoParameter, estadoParameter);
        }
    
        public virtual int SP_SET_EMPLEADO(Nullable<int> idtrabajador, string nombre, string apellidos, string sexo, Nullable<System.DateTime> fecha_nac, string num_documento, string direccion, string telefono, string email, Nullable<bool> statusE, string usuarioAdiciona, string usuarioModifica)
        {
            var idtrabajadorParameter = idtrabajador.HasValue ?
                new ObjectParameter("idtrabajador", idtrabajador) :
                new ObjectParameter("idtrabajador", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var fecha_nacParameter = fecha_nac.HasValue ?
                new ObjectParameter("Fecha_nac", fecha_nac) :
                new ObjectParameter("Fecha_nac", typeof(System.DateTime));
    
            var num_documentoParameter = num_documento != null ?
                new ObjectParameter("num_documento", num_documento) :
                new ObjectParameter("num_documento", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var statusEParameter = statusE.HasValue ?
                new ObjectParameter("StatusE", statusE) :
                new ObjectParameter("StatusE", typeof(bool));
    
            var usuarioAdicionaParameter = usuarioAdiciona != null ?
                new ObjectParameter("UsuarioAdiciona", usuarioAdiciona) :
                new ObjectParameter("UsuarioAdiciona", typeof(string));
    
            var usuarioModificaParameter = usuarioModifica != null ?
                new ObjectParameter("UsuarioModifica", usuarioModifica) :
                new ObjectParameter("UsuarioModifica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_EMPLEADO", idtrabajadorParameter, nombreParameter, apellidosParameter, sexoParameter, fecha_nacParameter, num_documentoParameter, direccionParameter, telefonoParameter, emailParameter, statusEParameter, usuarioAdicionaParameter, usuarioModificaParameter);
        }
    
        public virtual int SP_SET_INSERT_UPDATE_ARTICULO(Nullable<int> idarticulo, string codigo, string nombre, Nullable<int> idcategoria, string imag_Url, string descripcion, Nullable<decimal> precioVenta, Nullable<decimal> precioCompra, Nullable<decimal> cantidad, Nullable<bool> estado, Nullable<int> idProveedor)
        {
            var idarticuloParameter = idarticulo.HasValue ?
                new ObjectParameter("idarticulo", idarticulo) :
                new ObjectParameter("idarticulo", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var idcategoriaParameter = idcategoria.HasValue ?
                new ObjectParameter("idcategoria", idcategoria) :
                new ObjectParameter("idcategoria", typeof(int));
    
            var imag_UrlParameter = imag_Url != null ?
                new ObjectParameter("Imag_Url", imag_Url) :
                new ObjectParameter("Imag_Url", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var precioVentaParameter = precioVenta.HasValue ?
                new ObjectParameter("precioVenta", precioVenta) :
                new ObjectParameter("precioVenta", typeof(decimal));
    
            var precioCompraParameter = precioCompra.HasValue ?
                new ObjectParameter("precioCompra", precioCompra) :
                new ObjectParameter("precioCompra", typeof(decimal));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_INSERT_UPDATE_ARTICULO", idarticuloParameter, codigoParameter, nombreParameter, idcategoriaParameter, imag_UrlParameter, descripcionParameter, precioVentaParameter, precioCompraParameter, cantidadParameter, estadoParameter, idProveedorParameter);
        }
    
        public virtual int SP_SET_INSERT_UPDATE_INGRESO(Nullable<int> idingreso, Nullable<int> idproveedor, Nullable<System.DateTime> fecha, string tipo_comprobante, Nullable<decimal> itbis, Nullable<System.DateTime> fechaAdiciona, Nullable<System.DateTime> fechaModifica, string usuarioAdiciona, string usuarioModifica, Nullable<int> idarticulo, Nullable<decimal> precio_compra, Nullable<decimal> precio_venta, Nullable<int> stock_inicial, Nullable<int> stock_actual, Nullable<System.DateTime> fecha_produccion, Nullable<System.DateTime> fecha_vencimiento)
        {
            var idingresoParameter = idingreso.HasValue ?
                new ObjectParameter("idingreso", idingreso) :
                new ObjectParameter("idingreso", typeof(int));
    
            var idproveedorParameter = idproveedor.HasValue ?
                new ObjectParameter("idproveedor", idproveedor) :
                new ObjectParameter("idproveedor", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var tipo_comprobanteParameter = tipo_comprobante != null ?
                new ObjectParameter("tipo_comprobante", tipo_comprobante) :
                new ObjectParameter("tipo_comprobante", typeof(string));
    
            var itbisParameter = itbis.HasValue ?
                new ObjectParameter("Itbis", itbis) :
                new ObjectParameter("Itbis", typeof(decimal));
    
            var fechaAdicionaParameter = fechaAdiciona.HasValue ?
                new ObjectParameter("FechaAdiciona", fechaAdiciona) :
                new ObjectParameter("FechaAdiciona", typeof(System.DateTime));
    
            var fechaModificaParameter = fechaModifica.HasValue ?
                new ObjectParameter("FechaModifica", fechaModifica) :
                new ObjectParameter("FechaModifica", typeof(System.DateTime));
    
            var usuarioAdicionaParameter = usuarioAdiciona != null ?
                new ObjectParameter("UsuarioAdiciona", usuarioAdiciona) :
                new ObjectParameter("UsuarioAdiciona", typeof(string));
    
            var usuarioModificaParameter = usuarioModifica != null ?
                new ObjectParameter("UsuarioModifica", usuarioModifica) :
                new ObjectParameter("UsuarioModifica", typeof(string));
    
            var idarticuloParameter = idarticulo.HasValue ?
                new ObjectParameter("idarticulo", idarticulo) :
                new ObjectParameter("idarticulo", typeof(int));
    
            var precio_compraParameter = precio_compra.HasValue ?
                new ObjectParameter("precio_compra", precio_compra) :
                new ObjectParameter("precio_compra", typeof(decimal));
    
            var precio_ventaParameter = precio_venta.HasValue ?
                new ObjectParameter("precio_venta", precio_venta) :
                new ObjectParameter("precio_venta", typeof(decimal));
    
            var stock_inicialParameter = stock_inicial.HasValue ?
                new ObjectParameter("stock_inicial", stock_inicial) :
                new ObjectParameter("stock_inicial", typeof(int));
    
            var stock_actualParameter = stock_actual.HasValue ?
                new ObjectParameter("stock_actual", stock_actual) :
                new ObjectParameter("stock_actual", typeof(int));
    
            var fecha_produccionParameter = fecha_produccion.HasValue ?
                new ObjectParameter("fecha_produccion", fecha_produccion) :
                new ObjectParameter("fecha_produccion", typeof(System.DateTime));
    
            var fecha_vencimientoParameter = fecha_vencimiento.HasValue ?
                new ObjectParameter("fecha_vencimiento", fecha_vencimiento) :
                new ObjectParameter("fecha_vencimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_INSERT_UPDATE_INGRESO", idingresoParameter, idproveedorParameter, fechaParameter, tipo_comprobanteParameter, itbisParameter, fechaAdicionaParameter, fechaModificaParameter, usuarioAdicionaParameter, usuarioModificaParameter, idarticuloParameter, precio_compraParameter, precio_ventaParameter, stock_inicialParameter, stock_actualParameter, fecha_produccionParameter, fecha_vencimientoParameter);
        }
    
        public virtual int SP_SET_INSERTAR_ARTICULOS_INGRESO(string nombre, Nullable<int> idcategoria, string codigo, string imag_Url, string descripcion, Nullable<decimal> precioVenta, Nullable<decimal> precioCompra, Nullable<decimal> cantidad, Nullable<bool> estado, Nullable<int> idProveedor, Nullable<int> idingreso, Nullable<System.DateTime> fecha, string tipo_comprobante, Nullable<decimal> igv, string usuarioAdiciona, Nullable<int> stock_inicial, Nullable<System.DateTime> fecha_produccion, Nullable<System.DateTime> fecha_vencimiento)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var idcategoriaParameter = idcategoria.HasValue ?
                new ObjectParameter("idcategoria", idcategoria) :
                new ObjectParameter("idcategoria", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var imag_UrlParameter = imag_Url != null ?
                new ObjectParameter("Imag_Url", imag_Url) :
                new ObjectParameter("Imag_Url", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var precioVentaParameter = precioVenta.HasValue ?
                new ObjectParameter("precioVenta", precioVenta) :
                new ObjectParameter("precioVenta", typeof(decimal));
    
            var precioCompraParameter = precioCompra.HasValue ?
                new ObjectParameter("precioCompra", precioCompra) :
                new ObjectParameter("precioCompra", typeof(decimal));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            var idingresoParameter = idingreso.HasValue ?
                new ObjectParameter("idingreso", idingreso) :
                new ObjectParameter("idingreso", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var tipo_comprobanteParameter = tipo_comprobante != null ?
                new ObjectParameter("tipo_comprobante", tipo_comprobante) :
                new ObjectParameter("tipo_comprobante", typeof(string));
    
            var igvParameter = igv.HasValue ?
                new ObjectParameter("igv", igv) :
                new ObjectParameter("igv", typeof(decimal));
    
            var usuarioAdicionaParameter = usuarioAdiciona != null ?
                new ObjectParameter("UsuarioAdiciona", usuarioAdiciona) :
                new ObjectParameter("UsuarioAdiciona", typeof(string));
    
            var stock_inicialParameter = stock_inicial.HasValue ?
                new ObjectParameter("stock_inicial", stock_inicial) :
                new ObjectParameter("stock_inicial", typeof(int));
    
            var fecha_produccionParameter = fecha_produccion.HasValue ?
                new ObjectParameter("fecha_produccion", fecha_produccion) :
                new ObjectParameter("fecha_produccion", typeof(System.DateTime));
    
            var fecha_vencimientoParameter = fecha_vencimiento.HasValue ?
                new ObjectParameter("fecha_vencimiento", fecha_vencimiento) :
                new ObjectParameter("fecha_vencimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_INSERTAR_ARTICULOS_INGRESO", nombreParameter, idcategoriaParameter, codigoParameter, imag_UrlParameter, descripcionParameter, precioVentaParameter, precioCompraParameter, cantidadParameter, estadoParameter, idProveedorParameter, idingresoParameter, fechaParameter, tipo_comprobanteParameter, igvParameter, usuarioAdicionaParameter, stock_inicialParameter, fecha_produccionParameter, fecha_vencimientoParameter);
        }
    
        public virtual int SP_SET_PAGAR_CXC_NEW(Nullable<int> id_cliente, Nullable<System.DateTime> fecha, Nullable<decimal> valor, Nullable<bool> pagado, string usuario, Nullable<System.DateTime> fechaPago, Nullable<int> idFactura, Nullable<decimal> cantidadPagada, Nullable<bool> statud, Nullable<int> id_cxc)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var pagadoParameter = pagado.HasValue ?
                new ObjectParameter("pagado", pagado) :
                new ObjectParameter("pagado", typeof(bool));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var fechaPagoParameter = fechaPago.HasValue ?
                new ObjectParameter("fechaPago", fechaPago) :
                new ObjectParameter("fechaPago", typeof(System.DateTime));
    
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            var cantidadPagadaParameter = cantidadPagada.HasValue ?
                new ObjectParameter("cantidadPagada", cantidadPagada) :
                new ObjectParameter("cantidadPagada", typeof(decimal));
    
            var statudParameter = statud.HasValue ?
                new ObjectParameter("statud", statud) :
                new ObjectParameter("statud", typeof(bool));
    
            var id_cxcParameter = id_cxc.HasValue ?
                new ObjectParameter("id_cxc", id_cxc) :
                new ObjectParameter("id_cxc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_PAGAR_CXC_NEW", id_clienteParameter, fechaParameter, valorParameter, pagadoParameter, usuarioParameter, fechaPagoParameter, idFacturaParameter, cantidadPagadaParameter, statudParameter, id_cxcParameter);
        }
    
        public virtual int SP_SET_UDATE_INSERT_PROVEEDOR(Nullable<int> idproveedor, string razon_social, string nombreProveedor, string tipo_documento, string num_documento, string direccion, string telefono, string email, string url, Nullable<bool> statu, string usuarioAdiciona, string usuarioModifica)
        {
            var idproveedorParameter = idproveedor.HasValue ?
                new ObjectParameter("idproveedor", idproveedor) :
                new ObjectParameter("idproveedor", typeof(int));
    
            var razon_socialParameter = razon_social != null ?
                new ObjectParameter("razon_social", razon_social) :
                new ObjectParameter("razon_social", typeof(string));
    
            var nombreProveedorParameter = nombreProveedor != null ?
                new ObjectParameter("NombreProveedor", nombreProveedor) :
                new ObjectParameter("NombreProveedor", typeof(string));
    
            var tipo_documentoParameter = tipo_documento != null ?
                new ObjectParameter("tipo_documento", tipo_documento) :
                new ObjectParameter("tipo_documento", typeof(string));
    
            var num_documentoParameter = num_documento != null ?
                new ObjectParameter("num_documento", num_documento) :
                new ObjectParameter("num_documento", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var statuParameter = statu.HasValue ?
                new ObjectParameter("statu", statu) :
                new ObjectParameter("statu", typeof(bool));
    
            var usuarioAdicionaParameter = usuarioAdiciona != null ?
                new ObjectParameter("UsuarioAdiciona", usuarioAdiciona) :
                new ObjectParameter("UsuarioAdiciona", typeof(string));
    
            var usuarioModificaParameter = usuarioModifica != null ?
                new ObjectParameter("UsuarioModifica", usuarioModifica) :
                new ObjectParameter("UsuarioModifica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_UDATE_INSERT_PROVEEDOR", idproveedorParameter, razon_socialParameter, nombreProveedorParameter, tipo_documentoParameter, num_documentoParameter, direccionParameter, telefonoParameter, emailParameter, urlParameter, statuParameter, usuarioAdicionaParameter, usuarioModificaParameter);
        }
    
        public virtual ObjectResult<SP_TIPO_FACTURA_Result> SP_TIPO_FACTURA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TIPO_FACTURA_Result>("SP_TIPO_FACTURA");
        }
    
        public virtual ObjectResult<VENTAS_DEL_DIA_Result> VENTAS_DEL_DIA(Nullable<System.DateTime> hOY)
        {
            var hOYParameter = hOY.HasValue ?
                new ObjectParameter("HOY", hOY) :
                new ObjectParameter("HOY", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VENTAS_DEL_DIA_Result>("VENTAS_DEL_DIA", hOYParameter);
        }
    
        public virtual ObjectResult<VENTAS_DEL_MES_Result> VENTAS_DEL_MES(Nullable<System.DateTime> fROM, Nullable<System.DateTime> tO)
        {
            var fROMParameter = fROM.HasValue ?
                new ObjectParameter("FROM", fROM) :
                new ObjectParameter("FROM", typeof(System.DateTime));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VENTAS_DEL_MES_Result>("VENTAS_DEL_MES", fROMParameter, tOParameter);
        }
    }
}
